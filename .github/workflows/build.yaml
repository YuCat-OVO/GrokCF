name: Build & Release

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version
        required: false
        type: string
  push:
    branches:
      - master
      - develop
    paths-ignore:
      - ".github/**"
      - "docs/**"
      - "**.md"

env:
  DOCKERHUB_SLUG: docker.io/yucatovo/grokcf
  GHCR_SLUG: ghcr.io/yucat-ovo/grokcf

jobs:
  prepare:
    name: Prepare Metadata
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
      version: ${{ steps.meta.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate Docker Metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ${{ env.DOCKERHUB_SLUG }}
            ${{ env.GHCR_SLUG }}
          tags: |
            type=ref,event=branch,enable=${{ github.ref_name != github.event.repository.default_branch }}
            type=edge,branch=develop
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
            type=sha
          labels: |
            org.opencontainers.image.title=GrokCF
            org.opencontainers.image.description=GrokCF.
            org.opencontainers.image.vendor=YuCat-OVO

  build:
    name: Build and Push
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64
          buildkitd-flags: "--debug"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          tags: ${{ needs.prepare.outputs.tags }}
          labels: ${{ needs.prepare.outputs.labels }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
